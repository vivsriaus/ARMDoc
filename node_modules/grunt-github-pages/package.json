{
  "name": "grunt-github-pages",
  "description": "Push to gh-pages no problem",
  "version": "0.0.4",
  "homepage": "https://github.com/thanpolas/grunt-github-pages",
  "author": {
    "name": "Thanasis Polychronakis",
    "email": "thanpolas@gmail.com",
    "url": "http://thanpol.as"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thanpolas/grunt-github-pages.git"
  },
  "bugs": {
    "url": "https://github.com/thanpolas/grunt-github-pages/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/thanpolas/grunt-github-pages/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt": "~0.4.1",
    "async": "~0.2.6"
  },
  "devDependencies": {
    "matchdep": "~0.1.1",
    "grunt-mocha": "~0.2.3",
    "chai": "~1.5.0",
    "chai-as-promised": "~3.2.5",
    "grunt-clean": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "github",
    "pages",
    "git",
    "github pages"
  ],
  "readme": "# Grunt Github Pages\n\nPublish your project's pages on Github with one command.\n\nA [Grunt][] task that enables you to publish to the `gh-page` branch with one command line.\n\n## Getting Started\n\n```shell\nnpm install grunt-github-pages --save-dev\n```\n\n### Preparing your repository\n\nYou need to create a folder and add it to your `.gitignore` file. In that folder you have to clone the same repository again and point to the `gh-page` branch.\n\nAssume the target folder is named `_site/` and our github repository is named `project`:\n\n```shell\n$ ls -la\n.\n..\n.git\n.gitignore\nindex.md\n```\n\nWe add the `_site` folder in `.gitignore` and clone the current repository ( *project* ) to `_site`:\n\n```shell\n$ git clone git@github.com:thanpolas/project.git _site\n\n$ cd _site\n```\n\nA full copy of the `project` repository now exists in the `_site` folder. We now need to point it to the `gh-pages` branch and we are good to go:\n\n```shell\n$ pwd\nproject/_site/\n\n$ git checkout --orphan gh-pages\n# Creates our branch, without any parents (it's an orphan!)\nSwitched to a new branch 'gh-pages'\n\n$ git rm -rf .\n# Removes all files from the old working tree\nrm '.editorconfig'\nrm '.gitignore'\nâ€¦\n```\n\nThe gh-pages branch won't appear in the list of branches generated by git branch until you make your first commit.\n\n```shell\n$ echo \"Testing Grunt Github Pages\" > index.html\n$ git add index.html\n$ git commit -a -m \"First pages commit\"\n$ git push origin gh-pages\n```\n\nYour repository is now ready to start using the Github Pages task!\n\n## The `githubPages` Task\n\n\nEdit your [Gruntfile][] and add the `githubPages` task:\n\n```js\n  githubPages: {\n    target: {\n      options: {\n        // The default commit message for the gh-pages branch\n        commitMessage: 'push'\n      },\n      // The folder where your gh-pages repo is\n      src: '_site'\n    }\n  }\n\n  /* ... later on, after grunt.initConfig() call, create an alias: */\n\n// create an alias for the githubPages task\ngrunt.registerTask('deploy', ['githubPages:target']);\n```\n\nSo when you issue `grunt deploy` on your command line this is what will happen:\n\n1. The Current Working Directory will change to `_site`.\n2. The command `git add .` will be performed.\n3. The command `git commit -am \"push\"` will be performed.\n4. The command `git push origin gh-pages` will be performed.\n\n### The `src` Option\n\nThe `src` option must be a single string that represents a directory. The API is weak at this point but use cases need to be presented before a solution is attempted as there are a few intricacies involved. So do create an issue if you need globbing patterns here.\n\n### The `dest` Option\n\nThere are some cases, like building a [Jekyll][] site, that the destination folder `_site` will get overwritten by the generation of static pages, along with the `.git` folder. For these kind of cases a trick would be to maintain one more ignored directory where the `.git` folder is retained.\n\nThe second ignored directory should be the `dest` option in your config file:\n\n```js\n  githubPages: {\n    target: {\n      // The folder where your gh-pages repo is\n      src: '_site',\n      // The second ignored directory with the .git folder\n      dest: '_site_git'\n    }\n  }\n```\nIn this case, when you issue `grunt push` this is what will happen:\n\n1. All the contents of `_site` folder will be deep copied to `_site_git` overriding.\n2. The Current Working Directory will change to `_site_git`.\n3. The command `git add .` will be performed.\n4. The command `git commit -am \"auto commit\"` will be performed.\n5. The command `git push origin gh-pages` will be performed.\n\n### Other Options\n\n#### commitMessage\n**Type**: `string` Default: `auto commit`\n\nThe default commit message for the `gh-pages` branch.\n\n#### remote\n**Type**: `string` Default: `origin`\n\nThe name of the *remote* to be used when issuing `git push`.\n\n#### pushBranch\n**Type**: `string` Default: `gh-pages`\n\nThe name of the *branch* to be used when issuing `git push`.\n\n## Release History\n- **v0.0.1**, *Mid Mar 2013*\n  - Big Bang\n\n## License\nCopyright (c) 2013 Thanasis Polychronakis\nLicensed under the [MIT](LICENSE-MIT).\n\n[closure-library]: https://developers.google.com/closure/library/ \"Google Closure Library\"\n[closure-tools]: https://developers.google.com/closure/ \"Google Closure Tools\"\n[grunt]: http://gruntjs.com/\n[Getting Started]: https://github.com/gruntjs/grunt/wiki/Getting-started\n[package.json]: https://npmjs.org/doc/json.html\n[Gruntfile]: https://github.com/gruntjs/grunt/wiki/Sample-Gruntfile \"Grunt's Gruntfile.js\"\n[yeoman]: http://yeoman.io/ \"yeoman Modern Workflows for Modern Webapps\"\n[jekyll]: http://jekyllrb.com/ \"transform your text into a monster\"\n",
  "readmeFilename": "README.md",
  "_id": "grunt-github-pages@0.0.4",
  "dist": {
    "shasum": "6e855013b1c027422e6073dbd41042da7e1d4123",
    "tarball": "http://registry.npmjs.org/grunt-github-pages/-/grunt-github-pages-0.0.4.tgz"
  },
  "_from": "grunt-github-pages@0.0.4",
  "_npmVersion": "1.3.2",
  "_npmUser": {
    "name": "thanpolas",
    "email": "thanpolas@gmail.com"
  },
  "maintainers": [
    {
      "name": "thanpolas",
      "email": "thanpolas@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "6e855013b1c027422e6073dbd41042da7e1d4123",
  "_resolved": "https://registry.npmjs.org/grunt-github-pages/-/grunt-github-pages-0.0.4.tgz"
}
